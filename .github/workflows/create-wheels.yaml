name: Create wheel

on:
  # TODO remove
  push:
    # branches:
    #   - master
    paths-ignore:
      - 'doc/**'
      - 'examples/**'
  release:
    types: [created]

env:
  PYTHONNOUSERSITE: 1

jobs:
  make-wheel:
    name: Create wheel on ${{ matrix.os }} python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - 'ubuntu-latest'
          # - 'windows-latest'
          # - 'macos-latest'
        python-version:
          - '2.7'
          # - '3.5'
          # - '3.6'
          - '3.7'
          # - '3.8'
        include:
          - python-version: '2.7'
          - extra-requires: 'mock'
      fail-fast: false

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      - name: Create wheel
        run: |
          pip wheel -w dist --no-use-pep517 -v .

      - name: Install wheel
        run: |
          pip install -f dist --no-index sqlalchemy

      - name: Check c extensions
        # on windows in python 2.7 and 3.5 the cextension fail to build.
        # for python 2.7 visual studio 9 is missing
        # for python 3.5 the linker has an error "cannot run 'rc.exe'"
        if: matrix.os != 'windows-latest' || ( matrix.python-version != '2.7' && matrix.python-version != '3.5' )
        run: |
          python -c 'from sqlalchemy import cprocessors, cresultproxy, cutils'

      # - name: Test created wheel
      #   run: |
      #     pip install pytest pytest-xdist ${{ matrix.extra-requires }}
      #     pytest -n2 -q test -k 'not MockReconnectTest' --nomemory

      - name: Upload wheel
        uses: actions/upload-artifact@v1
        with:
          name: single-wheel-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist

  create-artifact:
    name: Create a single artifact with all the wheels
    runs-on: 'ubuntu-latest'
    needs: make-wheel

    steps:

      # - name: Download single wheels
      #   uses: actions/download-artifact@v2-preview
      #   with:
      #     path: single

      - uses: actions/download-artifact@v1
        with:
          name: single-wheel-ubuntu-latest-3.7
          path: single
      - uses: actions/download-artifact@v1
        with:
          name: single-wheel-ubuntu-latest-2.7
          path: single

      # - name: Move in single folder
      #   shell: bash
      #   run: |
      #     mkdir wheels
      #     mv single/**/*.whl wheels

      - name: Upload wheel
        uses: actions/upload-artifact@v1
        with:
          name: all-wheels
          # path: wheels
          path: single

